events {
  worker_connections 4096;
}

http {
  resolver 169.254.169.253;
  include       mime.types;
  default_type  application/octet-stream;

  keepalive_timeout 65;
  sendfile on;

  proxy_cache_path /cache/cache levels=1:2 keys_zone=cache:16m inactive=1y max_size=75g use_temp_path=off;

  proxy_http_version 1.1;

  #https://docs.docker.com/registry/recipes/nginx/#setting-things-up
  map $upstream_http_docker_distribution_api_version $docker_distribution_api_version {
  '' 'registry/2.0';
  }

  server {
    listen 443 ssl default_server;
    server_name _;
    ssl_certificate           /etc/nginx/ssl/default.crt;
    ssl_certificate_key       /etc/nginx/ssl/default.key;

    # Cache
    add_header X-Cache-Status   $upstream_cache_status;
    proxy_temp_path /cache/temp 1 2;
    proxy_ignore_headers        Cache-Control;

    # disable any limits to avoid HTTP 413 for large image uploads
    client_max_body_size 0;

    # required to avoid HTTP 411: see Issue #1486 (https://github.com/moby/moby/issues/1486)
    chunked_transfer_encoding on;

    # increases timeouts to avoid HTTP 504
    proxy_connect_timeout  3s;
    proxy_read_timeout     300s;
    proxy_send_timeout     300s;
    send_timeout           300s;

    # disable proxy request buffering
    proxy_request_buffering off;

    add_header 'Docker-Distribution-Api-Version' $docker_distribution_api_version always;
    add_header "Access-Control-Allow-Origin" "*";

    location / {
      set $upstream           REGISTRY_URL;

      proxy_pass              $upstream;
      proxy_redirect          $upstream https://$host;

      proxy_set_header        X-Real-IP            $remote_addr;
      proxy_set_header        X-Forwarded-For      $remote_addr;
      proxy_set_header        X-Forwarded-User     "Basic $http_authorization";
      proxy_set_header        Authorization        "Basic $http_authorization";
      proxy_set_header        X-Forwarded-Proto    https;
      
      proxy_intercept_errors    on;
      error_page 301 302 307 =  @handle_redirect;
    }

    # No authentication headers needed as ECR returns s3 uri with details in
    # query params. Also the params should be part of cache key for nginx to
    # issue HIT for same image blob.
    location @handle_redirect {
      set                    $saved_redirect_location '$upstream_http_location';
      proxy_pass             $saved_redirect_location;
      proxy_cache            cache;
      proxy_cache_key        $uri;
      proxy_cache_valid      200  1y;
      proxy_cache_use_stale  error timeout invalid_header updating
                             http_500 http_502 http_503 http_504;
      proxy_cache_lock       on;
    }
  }
}
